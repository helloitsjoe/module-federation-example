(self.webpackChunkmodule_federation_example_consumer=self.webpackChunkmodule_federation_example_consumer||[]).push([["src_bootstrap_js"],{564:(e,t,n)=>{"use strict";n.r(t);var o=n(682),a=n.n(o),r=a().lazy((function(){return n.e("webpack_container_remote_host_Header").then(n.t.bind(n,417,23))})),l=function(){return a().createElement("div",{style:{height:"80px",width:"100%",backgroundColor:"lightgray"}})};const s=function(){return a().createElement("div",null,a().createElement(a().Suspense,{fallback:a().createElement(l,null)},a().createElement(r,null)),a().createElement("div",{style:{padding:"2em"}},a().createElement("h1",null,"Hello from the consuming app!"),a().createElement("p",null,"This is an example of module federation using Webpack 5. The header is shared from the host app and consumed by this app. If you open devtools to the Network tab, you'll see most requests going to `/consumer`, but `remoteEntry.js` and the Header requests going to `/host`."),a().createElement("p",null,"In the console you can also access `window.hostApp`, which includes a `get()` method that returns the exposed modules wrapped in a promise."),a().createElement("a",{href:"/module-federation-example/host"},"Go back to the host app")))};(0,n(585).render)(a().createElement(s,null),document.getElementById("root"))}}]);